// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Repository;

#nullable disable

namespace WebApi.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Core.Entities.ActionType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ActionTypes");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Maintenance", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpectedTimeToFix")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("PictureGroupID")
                        .HasColumnType("int4");

                    b.Property<int>("ResponsibleUserID")
                        .HasColumnType("integer");

                    b.Property<int?>("StatusID")
                        .HasColumnType("int4");

                    b.Property<int?>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleID")
                        .HasColumnType("int4");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("PictureGroupID");

                    b.HasIndex("ResponsibleUserID");

                    b.HasIndex("StatusID");

                    b.HasIndex("UserID");

                    b.HasIndex("VehicleID");

                    b.ToTable("Maintenances");
                });

            modelBuilder.Entity("WebApi.Core.Entities.MaintenanceHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("ActionTypeID")
                        .HasColumnType("int4");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaintenanceID")
                        .HasColumnType("int4");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ID");

                    b.HasIndex("ActionTypeID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("MaintenanceID");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("MaintenanceHistories");
                });

            modelBuilder.Entity("WebApi.Core.Entities.PictureGroup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PictureImage")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("PictureGroups");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("WebApi.Core.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreateDate = new DateTime(2022, 6, 22, 22, 13, 1, 807, DateTimeKind.Local).AddTicks(2506),
                            CreatedBy = 1,
                            FirstName = "admin",
                            IsDeleted = false,
                            LastName = "admin",
                            ModifiedBy = 1,
                            ModifyDate = new DateTime(2022, 6, 22, 22, 13, 1, 807, DateTimeKind.Local).AddTicks(2521),
                            PhoneNumber = "0"
                        });
                });

            modelBuilder.Entity("WebApi.Core.Entities.UserAuthentication", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("UserID")
                        .IsUnique();

                    b.ToTable("UserAuthentications");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Password = "123456",
                            UserID = 1,
                            UserName = "admin",
                            UserRole = "admin"
                        });
                });

            modelBuilder.Entity("WebApi.Core.Entities.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PlateNo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<int?>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("VehicleTypeID")
                        .HasColumnType("int4");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserID");

                    b.HasIndex("VehicleTypeID");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("WebApi.Core.Entities.VehicleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int4");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("WebApi.Core.Entities.ActionType", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedActionTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedActionTypes")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Maintenance", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedMaintenances")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedMaintenances")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.PictureGroup", "PictureGroup")
                        .WithMany("Maintenances")
                        .HasForeignKey("PictureGroupID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApi.Core.Entities.User", "ResponsibleUser")
                        .WithMany("ResponsibleMaintenances")
                        .HasForeignKey("ResponsibleUserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.Status", "Status")
                        .WithMany("Maintenances")
                        .HasForeignKey("StatusID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApi.Core.Entities.User", "User")
                        .WithMany("Maintenances")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApi.Core.Entities.Vehicle", "Vehicle")
                        .WithMany("Maintenances")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("PictureGroup");

                    b.Navigation("ResponsibleUser");

                    b.Navigation("Status");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("WebApi.Core.Entities.MaintenanceHistory", b =>
                {
                    b.HasOne("WebApi.Core.Entities.ActionType", "ActionType")
                        .WithMany("MaintenanceHistories")
                        .HasForeignKey("ActionTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedMaintenanceHistories")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.Maintenance", "Maintenance")
                        .WithMany("MaintenanceHistories")
                        .HasForeignKey("MaintenanceID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedMaintenanceHistories")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ActionType");

                    b.Navigation("CreatedByUser");

                    b.Navigation("Maintenance");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("WebApi.Core.Entities.PictureGroup", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedPictureGroups")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedPictureGroups")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Status", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedStatuses")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedStatuses")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("WebApi.Core.Entities.User", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedUsers")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("WebApi.Core.Entities.UserAuthentication", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "User")
                        .WithOne("UserAuthentication")
                        .HasForeignKey("WebApi.Core.Entities.UserAuthentication", "UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Vehicle", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedVehicles")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedVehicles")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApi.Core.Entities.VehicleType", "VehicleType")
                        .WithMany("Vehicles")
                        .HasForeignKey("VehicleTypeID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");

                    b.Navigation("User");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("WebApi.Core.Entities.VehicleType", b =>
                {
                    b.HasOne("WebApi.Core.Entities.User", "CreatedByUser")
                        .WithMany("CreatedVehicleTypes")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApi.Core.Entities.User", "ModifiedByUser")
                        .WithMany("ModifiedVehicleTypes")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("ModifiedByUser");
                });

            modelBuilder.Entity("WebApi.Core.Entities.ActionType", b =>
                {
                    b.Navigation("MaintenanceHistories");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Maintenance", b =>
                {
                    b.Navigation("MaintenanceHistories");
                });

            modelBuilder.Entity("WebApi.Core.Entities.PictureGroup", b =>
                {
                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Status", b =>
                {
                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("WebApi.Core.Entities.User", b =>
                {
                    b.Navigation("CreatedActionTypes");

                    b.Navigation("CreatedMaintenanceHistories");

                    b.Navigation("CreatedMaintenances");

                    b.Navigation("CreatedPictureGroups");

                    b.Navigation("CreatedStatuses");

                    b.Navigation("CreatedUsers");

                    b.Navigation("CreatedVehicleTypes");

                    b.Navigation("CreatedVehicles");

                    b.Navigation("Maintenances");

                    b.Navigation("ModifiedActionTypes");

                    b.Navigation("ModifiedMaintenanceHistories");

                    b.Navigation("ModifiedMaintenances");

                    b.Navigation("ModifiedPictureGroups");

                    b.Navigation("ModifiedStatuses");

                    b.Navigation("ModifiedUsers");

                    b.Navigation("ModifiedVehicleTypes");

                    b.Navigation("ModifiedVehicles");

                    b.Navigation("ResponsibleMaintenances");

                    b.Navigation("UserAuthentication");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("WebApi.Core.Entities.Vehicle", b =>
                {
                    b.Navigation("Maintenances");
                });

            modelBuilder.Entity("WebApi.Core.Entities.VehicleType", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
